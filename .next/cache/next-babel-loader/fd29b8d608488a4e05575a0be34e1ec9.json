{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"D:\\\\Working_place\\\\Hossam\\\\debcoins_next\\\\utils\\\\auth.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nconst AuthContext = createContext();\nconst {\n  Provider\n} = AuthContext;\n\nconst AuthProvider = ({\n  children\n}) => {\n  const {\n    0: authState,\n    1: setAuthState\n  } = useState({});\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userInfo = localStorage.getItem('userInfo');\n    const expiresAt = localStorage.getItem('expiresAt');\n    const message = localStorage.getItem('message');\n    setAuthState({\n      token,\n      expiresAt,\n      userInfo: userInfo ? JSON.parse(userInfo) : {},\n      message\n    });\n  }, []);\n\n  const setAuthInfo = ({\n    token,\n    userInfo,\n    expiresAt,\n    message\n  }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userInfo', _JSON$stringify(userInfo));\n    localStorage.setItem('expiresAt', expiresAt);\n    localStorage.setItem('message', message);\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt,\n      message\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('expiresAt');\n    localStorage.removeItem('message');\n    setAuthState({});\n  };\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt || authState.message === \"not verified\") {\n      return false;\n    }\n\n    return new Date().getTime() / 1000 < authState.expiresAt;\n  };\n\n  const isAdmin = () => {\n    return authState.userInfo && authState.userInfo.role === 'admin';\n  };\n\n  return __jsx(Provider, {\n    value: {\n      authState,\n      setAuthState: authInfo => setAuthInfo(authInfo),\n      logout,\n      isAuthenticated,\n      isAdmin\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["D:/Working_place/Hossam/debcoins_next/utils/auth.js"],"names":["React","createContext","useState","useEffect","AuthContext","Provider","AuthProvider","children","authState","setAuthState","token","localStorage","getItem","userInfo","expiresAt","message","JSON","parse","setAuthInfo","setItem","logout","removeItem","isAuthenticated","Date","getTime","isAdmin","role","authInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,MAAMC,WAAW,GAAGH,aAAa,EAAjC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,WAArB;;AAEA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAME,SAAS,GAAGH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,UAAMG,OAAO,GAAGJ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AACAH,IAAAA,YAAY,CAAC;AACXC,MAAAA,KADW;AAEXI,MAAAA,SAFW;AAGXD,MAAAA,QAAQ,EAAEA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAH,GAA0B,EAHjC;AAIXE,MAAAA;AAJW,KAAD,CAAZ;AAMD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMG,WAAW,GAAG,CAAC;AAAER,IAAAA,KAAF;AAASG,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA6BC,IAAAA;AAA7B,GAAD,KAA4C;AAC9DJ,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BT,KAA9B;AACAC,IAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiC,gBAAeN,QAAf,CAAjC;AACAF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCL,SAAlC;AACAH,IAAAA,YAAY,CAACQ,OAAb,CAAqB,SAArB,EAAgCJ,OAAhC;AACAN,IAAAA,YAAY,CAAC;AACXC,MAAAA,KADW;AAEXG,MAAAA,QAFW;AAGXC,MAAAA,SAHW;AAIXC,MAAAA;AAJW,KAAD,CAAZ;AAMD,GAXD;;AAaA,QAAMK,MAAM,GAAG,MAAM;AACnBT,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,SAAxB;AAEAZ,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAPD;;AASA,QAAMa,eAAe,GAAG,MAAM;AAC5B,QAAI,CAACd,SAAS,CAACE,KAAX,IAAoB,CAACF,SAAS,CAACM,SAA/B,IAA4CN,SAAS,CAACO,OAAV,KAAoB,cAApE,EAAoF;AAClF,aAAO,KAAP;AACD;;AACD,WAAO,IAAIQ,IAAJ,GAAWC,OAAX,KAAuB,IAAvB,GAA8BhB,SAAS,CAACM,SAA/C;AACD,GALD;;AAOA,QAAMW,OAAO,GAAG,MAAM;AACpB,WAAOjB,SAAS,CAACK,QAAV,IAAsBL,SAAS,CAACK,QAAV,CAAmBa,IAAnB,KAA4B,OAAzD;AACD,GAFD;;AAIA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAE;AACLlB,MAAAA,SADK;AAELC,MAAAA,YAAY,EAAGkB,QAAD,IAAcT,WAAW,CAACS,QAAD,CAFlC;AAGLP,MAAAA,MAHK;AAILE,MAAAA,eAJK;AAKLG,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGlB,QATH,CADF;AAaD,CA9DD;;AAgEA,SAASH,WAAT,EAAsBE,YAAtB","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nconst AuthContext = createContext()\nconst { Provider } = AuthContext\n\nconst AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({})\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const userInfo = localStorage.getItem('userInfo')\n    const expiresAt = localStorage.getItem('expiresAt')\n    const message = localStorage.getItem('message')\n    setAuthState({\n      token,\n      expiresAt,\n      userInfo: userInfo ? JSON.parse(userInfo) : {},\n      message\n    })\n  }, [])\n\n  const setAuthInfo = ({ token, userInfo, expiresAt,message }) => {\n    localStorage.setItem('token', token)\n    localStorage.setItem('userInfo', JSON.stringify(userInfo))\n    localStorage.setItem('expiresAt', expiresAt)\n    localStorage.setItem('message', message)\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt,\n      message\n    })\n  }\n\n  const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('expiresAt')\n    localStorage.removeItem('message')\n\n    setAuthState({})\n  }\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt || authState.message===\"not verified\") {\n      return false\n    }\n    return new Date().getTime() / 1000 < authState.expiresAt\n  }\n\n  const isAdmin = () => {\n    return authState.userInfo && authState.userInfo.role === 'admin'\n  }\n\n  return (\n    <Provider\n      value={{\n        authState,\n        setAuthState: (authInfo) => setAuthInfo(authInfo),\n        logout,\n        isAuthenticated,\n        isAdmin\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nexport { AuthContext, AuthProvider }\n"]},"metadata":{},"sourceType":"module"}