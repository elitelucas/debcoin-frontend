{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4e3aadec713a2fd15bee.hot-update.js","sources":["webpack:///./utils/auth.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nconst AuthContext = createContext()\nconst { Provider } = AuthContext\n\nconst AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({})\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const userInfo = localStorage.getItem('userInfo')\n    const expiresAt = localStorage.getItem('expiresAt')\n    const message = localStorage.getItem('message')\n    setAuthState({\n      token,\n      expiresAt,\n      userInfo: userInfo ? JSON.parse(userInfo) : {},\n      message\n    })\n  }, [])\n\n  const setAuthInfo = ({ token, userInfo, expiresAt,message }) => {\n    localStorage.setItem('token', token)\n    localStorage.setItem('userInfo', JSON.stringify(userInfo))\n    localStorage.setItem('expiresAt', expiresAt)\n    localStorage.setItem('message', message)\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt,\n      message\n    })\n  }\n\n  const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('expiresAt')\n    localStorage.removeItem('message')\n\n    setAuthState({})\n  }\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt || authState.message===\"not verified\") {\n      return false\n    }\n    console.log(new Date().getTime() / 1000 +\" < \"+ authState.expiresAt);\n    return new Date().getTime() / 1000 < authState.expiresAt\n  }\n\n  const isAdmin = () => {\n    return authState.userInfo && authState.userInfo.role === 'admin'\n  }\n\n  return (\n    <Provider\n      value={{\n        authState,\n        setAuthState: (authInfo) => setAuthInfo(authInfo),\n        logout,\n        isAuthenticated,\n        isAdmin\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nexport { AuthContext, AuthProvider }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;;;;;A","sourceRoot":""}